<section>
    <div class="d-flex">
        {{> sidebar}}

        <div class="content col-md-10">
            <h1>Movies Manager</h1>

            <div class="container-admin">
                <!-- Filter Options -->
                <div class="filter-options d-flex justify-content-between">
                    <div>
                        <input type="text" id="filter-name" placeholder="Search by movie name..." class="filter"
                               style="width: 200px;">
                        <select id="filter-genre" class="filter" style="width: 150px;">
                            <option value="all">All Genre</option>
                            {{#each genres}}
                                <option value="{{this}}">{{this}}</option>
                            {{/each}}
                        </select>
                        <select id="filter-country" class="filter" style="width: 150px;">
                            <option value="all">All Country</option>
                            {{#each countries}}
                                <option value="{{this}}">{{this}}</option>
                            {{/each}}
                        </select>
                        <button id="filter-button">Filter</button>
                    </div>
                    <div>
                        <label for="sort-by">Sort by:</label>
                        <select id="sort-by" class="filter" style="width: 150px;">
                            <option value="none">None</option>
                            <option value="released_date">Released Date</option>
                            <option value="end_date">End Date</option>
                            <option value="name_vn">Movie Name</option>
                            <option value="limitage_vn">Age</option>
                        </select>
                        <select id="sort-order" class="filter">
                            <option value="asc">Ascending</option>
                            <option value="desc">Descending</option>
                        </select>
                        <button id="sort-button">Sort</button>
                    </div>
                </div>
                <br>

                <!-- Movie Table -->
                <div style="overflow-y: auto; max-height: 500px;">
                    <table id="movie-db" class="table table-striped">
                        <thead>
                        <tr>
                            <th>Movie Name</th>
                            <th>Genre</th>
                            <th>Country</th>
                            <th>Age</th>
                            <th>Released Date</th>
                            <th>End Date</th>
                            <th>Actions</th>
                        </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>

                <div class="d-flex justify-content-end">
                    <button id="add-movie-button" class="btn btn-success mt-4">Add Movie</button>
                </div>

                <!-- Pagination Controls -->
                <div class="pagination-controls">
                    <button id="prev-page" class="btn btn-primary">Previous</button>
                    <span id="current-page">1</span>
                    <button id="next-page" class="btn btn-primary">Next</button>
                </div>
            </div>
        </div>
    </div>
</section>


<script>
    document.addEventListener('DOMContentLoaded', async () => {
        const movieTableBody = document.querySelector('#movie-db tbody');
        const currentPageElement = document.querySelector('#current-page');
        const totalPagesElement = document.createElement('span');
        totalPagesElement.id = 'total-pages';
        currentPageElement.parentNode.insertBefore(totalPagesElement, currentPageElement.nextSibling);
        let currentPage = 1;

        async function fetchMovies(page = 1) {
            try {
                const filterName = document.getElementById('filter-name').value;
                const filterGenre = document.getElementById('filter-genre').value;
                const filterCountry = document.getElementById('filter-country').value;
                let query = `page=${page}`;
                if (filterName) query += `&keyword=${filterName}`;
                if (filterGenre !== 'all') query += `&genre=${filterGenre}`;
                if (filterCountry !== 'all') query += `&country=${filterCountry}`;
                const response = await fetch(`/api/movies?${query}`);
                const data = await response.json();

                populateTable(data.movies);
                currentPageElement.textContent = data.currentPage;
                totalPagesElement.innerHTML = `/&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;${data.totalPages}`;

                // Update button states
                document.querySelector('#prev-page').disabled = currentPage <= 1;
                document.querySelector('#next-page').disabled = currentPage >= data.totalPages;
            } catch (error) {
                console.error('Error fetching movies:', error);
            }
        }

        function populateTable(movies) {
            movieTableBody.innerHTML = '';
            movies.forEach((movie) => {
                const row = document.createElement('tr');
                row.innerHTML = `
                <td>${movie.name_vn}</td>
                <td>${movie.type_name_vn.join(', ')}</td>
                <td>${movie.country_name_vn}</td>
                <td>${movie.limitage_vn}</td>
                <td>${new Date(movie.release_date).toLocaleDateString()}</td>
                <td>${new Date(movie.end_date).toLocaleDateString()}</td>
                <td>
                    <button class="edit-btn btn btn-success btn-sm block-btn" data-id="${movie._id}">Edit</button>
                    <button class="delete-btn btn btn-danger btn-sm" data-id="${movie._id}">Delete</button>
                </td>
            `;
                movieTableBody.appendChild(row);
            });
            assignActionListeners();
        }

        document.querySelector('#prev-page').addEventListener('click', () => {
            if (currentPage > 1) {
                currentPage--;
                fetchMovies(currentPage);
            }
        });

        document.querySelector('#next-page').addEventListener('click', () => {
            currentPage++;
            fetchMovies(currentPage);
        });

        // Assign action listeners for Edit and Delete buttons
        const assignActionListeners = () => {
            document.querySelectorAll(".edit-btn").forEach((button) => {
                button.addEventListener("click", async () => {
                    const movieId = button.dataset.id;
                    const response = await fetch(`/admin/movies/${movieId}`, {method: "GET"});
                    if (response.ok) {
                        const movie = await response.json();
                        showEditForm(movie);
                    } else {
                        alert("Error fetching movie details.");
                    }
                });
            });

            document.querySelectorAll(".delete-btn").forEach((button) => {
                button.addEventListener("click", async () => {
                    const movieId = button.dataset.id;
                    if (confirm("Are you sure you want to delete this movie?")) {
                        const response = await fetch(`/admin/movies/${movieId}`, {method: "DELETE"});
                        if (response.ok) {
                            alert("Movie deleted.");
                            await fetchMovies(); // Refresh table
                        } else {
                            alert("Error deleting movie.");
                        }
                    }
                });
            });
        };

        // Show the edit form with the current movie details
        const showEditForm = (movie) => {
            const content = document.querySelector(".content");
            content.innerHTML = `
            <div class="content">
                <h1>Edit Movie: ${movie.name_vn}</h1>
                <div class="container-admin">
                    <form id="edit-movie-form" class="form-container-movie-manager">
                        <div class="form-group-movie-manager">
                            <label for="name-vn">Name (VN):</label>
                            <input type="text" id="name-vn" value="${movie.name_vn}">
                        </div>
                        <div class="form-group-movie-manager">
                            <label for="director">Director:</label>
                            <input type="text" id="director" value="${movie.director}">
                        </div>
                        <div class="form-group-movie-manager">
                            <label for="actor">Actor:</label>
                            <input type="text" id="actor" value="${movie.actor}">
                        </div>
                        <div class="form-group-movie-manager">
                            <label for="release-date">Release Date:</label>
                            <input type="date" id="release-date" value="${new Date(movie.release_date).toISOString().split('T')[0]}">
                        </div>
                        <div class="form-group-movie-manager">
                            <label for="country">Country:</label>
                            <input type="text" id="country" value="${movie.country_name_vn}">
                        </div>
                        <div class="form-group-movie-manager">
                            <label for="genre">Genre:</label>
                            <input type="text" id="genre" value="${movie.type_name_vn.join(', ')}">
                        </div>
                        <div class="form-group-movie-manager">
                            <label for="trailer">Trailer:</label>
                            <input type="text" id="trailer" value="${movie.trailer}">
                        </div>
                        <div class="form-group-movie-manager">
                            <label for="ratings">Ratings:</label>
                            <input type="text" id="ratings" value="${movie.ratings}">
                        </div>
                        <div class="form-group-movie-manager">
                            <label for="time">Time (minutes):</label>
                            <input type="number" id="time" value="${movie.time}">
                        </div>
                        <div class="form-group-movie-manager">
                            <label for="brief-vn">Brief (VN):</label>
                            <textarea id="brief-vn" rows="5" style="min-height: 120px; width: 100%;">${movie.brief_vn}</textarea>
                        </div>
                        <div class="form-group-movie-manager">
                            <label for="movie-image">Image:</label>
                            <input type="file" name="movieImage" id="movie-image" accept="image/*">
                            ${movie.image ? `<img src="${movie.image}" alt="Current Image" width="100" height="100">` : ''}
                        </div>
                        <div class="form-group-movie-manager">
                            <label for="background-image">Background Image:</label>
                            <input type="file" name="backgroundImage" id="background-image" accept="image/*">
                            ${movie.background_image_url ? `<img src="${movie.background_image_url}" alt="Current Background Image" width="100" height="100">` : ''}
                            </div>
                        <div class="form-action-movie-manager">
                            <button type="submit" class="btn btn-primary">Save</button>
                            <button type="button" class="btn btn-secondary" id="cancel-edit">Cancel</button>
                        </div>
                    </form>
                </div>
            </div>
            `;

            // Handle form submission
            document.getElementById("edit-movie-form").addEventListener("submit", async (event) => {
                event.preventDefault();

                const updateMovie = async (id) => {
                    const updatedMovie = {
                        name_vn: document.getElementById("name-vn").value,
                        director: document.getElementById("director").value,
                        actor: document.getElementById("actor").value,
                        release_date: new Date(document.getElementById("release-date").value),
                        country_name_vn: document.getElementById("country").value,
                        genre: document.getElementById("genre").value.split(',').map(genre => genre.trim()),
                        trailer: document.getElementById("trailer").value,
                        ratings: document.getElementById("ratings").value,
                        time: document.getElementById("time").value,
                        brief_vn: document.getElementById("brief-vn").value,
                    };

                    const formData = new FormData();
                    formData.append("name_vn", updatedMovie.name_vn);
                    formData.append("director", updatedMovie.director);
                    formData.append("actor", updatedMovie.actor);
                    formData.append("release_date", updatedMovie.release_date);
                    formData.append("country_name_vn", updatedMovie.country_name_vn);
                    formData.append("genre", updatedMovie.genre);
                    formData.append("trailer", updatedMovie.trailer);
                    formData.append("ratings", updatedMovie.ratings);
                    formData.append("time", updatedMovie.time);
                    formData.append("brief_vn", updatedMovie.brief_vn);
                    console.log(formData);

                    const movieImageInput = document.getElementById("movie-image");
                    if (movieImageInput.files.length > 0) {
                        formData.append("movieImage", movieImageInput.files[0]);
                    }

                    const backgroundImageInput = document.getElementById("background-image");
                    if (backgroundImageInput.files.length > 0) {
                        formData.append("backgroundImage", backgroundImageInput.files[0]);
                    }

                    const response = await fetch(`/admin/movies/${movie.id}`, {
                        method: "PUT",
                        body: formData
                    });

                    if (response.ok) {
                        alert("Movie updated successfully!");
                        location.reload();
                    } else {
                        alert("Error updating movie.");
                    }
                };

                updateMovie(movie.id);
            });

            // Cancel edit
            document.getElementById("cancel-edit").addEventListener("click", () => {
                location.reload(); // Reload the page to return to the table view
            });
        };

        // Handle Add Movie button
        document.getElementById("add-movie-button").addEventListener("click", () => {
            showAddForm();
        });

        // Show the add form
        const showAddForm = () => {
            const content = document.querySelector(".content");
            content.innerHTML = `
            <!-- Add Movie Form -->
            <div class="content">
                <h1>Add New Movie</h1>
                <div class="container-admin">
                    <form id="add-movie-form" class="form-container-movie-manager">
                        <div class="form-group-movie-manager">
                            <label for="name-vn">Name (VN):</label>
                            <input type="text" id="name-vn" required>
                        </div>
                        <div class="form-group-movie-manager">
                            <label for="director">Director:</label>
                            <input type="text" id="director" required>
                        </div>
                        <div class="form-group-movie-manager">
                            <label for="actor">Actor:</label>
                            <input type="text" id="actor" required>
                        </div>
                        <div class="form-group-movie-manager">
                            <label for="release-date">Release Date:</label>
                            <input type="date" id="release-date" required>
                        </div>
                        <div class="form-group-movie-manager">
                            <label for="country">Country:</label>
                            <input type="text" id="country" required>
                        </div>
                        <div class="form-group-movie-manager">
                            <label for="genre">Genre:</label>
                            <input type="text" id="genre" required>
                        </div>
                        <div class="form-group-movie-manager">
                            <label for="trailer">Trailer:</label>
                            <input type="text" id="trailer" required>
                        </div>
                        <div class="form-group-movie-manager">
                            <label for="ratings">Ratings:</label>
                            <input type="text" id="ratings" required>
                        </div>
                        <div class="form-group-movie-manager">
                            <label for="time">Time (minutes):</label>
                            <input type="number" id="time" required>
                        </div>
                        <div class="form-group-movie-manager">
                            <label for="brief-vn">Brief (VN):</label>
                            <textarea
                                id="brief-vn"
                                required
                                rows="6"
                                style="min-height: 150px; width: 100%; padding: 10px; resize: vertical;"
                            ></textarea>
                        </div>
                        <!-- Other form fields -->
                      <div class="form-group-movie-manager">
                        <label for="movie-image">Image:</label>
                        <input type="file" name="movieImage" id="movie-image" accept="image/*" required>
                      </div>
                      <div class="form-group-movie-manager">
                        <label for="background-image">Background Image:</label>
                        <input type="file" name="backgroundImage" id="background-image" accept="image/*" required>
                      </div>
                      <div class="form-action-movie-manager">
                        <button type="submit" class="btn btn-primary">Save</button>
                        <button type="button" class="btn btn-secondary" id="cancel-add">Cancel</button>
                      </div>
                    </form>
                </div>
            </div>
            `;

            // Handle form submission for adding movie
            document.getElementById("add-movie-form").addEventListener("submit", async (event) => {
                event.preventDefault();

                const formData = new FormData();
                formData.append("name_vn", document.getElementById("name-vn").value);
                formData.append("director", document.getElementById("director").value);
                formData.append("actor", document.getElementById("actor").value);
                formData.append("release_date", document.getElementById("release-date").value);
                formData.append("country_name_vn", document.getElementById("country").value);
                formData.append("genre", document.getElementById("genre").value);
                formData.append("trailer", document.getElementById("trailer").value);
                formData.append("ratings", document.getElementById("ratings").value);
                formData.append("time", document.getElementById("time").value);
                formData.append("brief_vn", document.getElementById("brief-vn").value);
                formData.append("movieImage", document.getElementById("movie-image").files[0]);
                formData.append("backgroundImage", document.getElementById("background-image").files[0]);
                console.log(formData);
                try {
                    const response = await fetch('/admin/movies', {
                        method: 'POST',
                        body: formData,
                    });

                    if (response.ok) {
                        alert('Movie added successfully!');
                        location.reload(); // Reload to display the updated table
                    } else {
                        const error = await response.json();
                        alert(error.message || 'Error adding movie.');
                    }
                } catch (error) {
                    console.error(error);
                    alert('Error connecting to the server.');
                }
            });

            // Cancel adding movie
            document.getElementById("cancel-add").addEventListener("click", () => {
                location.reload(); // Reload the page to return to the table view
            });
        };

        // Event listener for filter button
        document.getElementById('filter-button').addEventListener('click', async () => {
            currentPage = 1;
            await fetchMovies();
        });

        await fetchMovies();
    });
</script>